<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="target.environment" elementType="Argument">
            <stringProp name="Argument.name">target.environment</stringProp>
            <stringProp name="Argument.value">${__P(target.environment,testpro.ugsk.ru)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://testpro.ugsk.ru/sas/connect/token</stringProp>
            <stringProp name="Authorization.username">ro.client</stringProp>
            <stringProp name="Authorization.password">secret</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
      </AuthManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${target.environment}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.policy">compatibility</stringProp>
      </CookieManager>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="AssuranceHome_Count_and_Sell" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1159483372">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1264019991">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp name="50547">300</stringProp>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="1368556610">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-2104298250">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-1766355382">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-1661818763">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-1557282144">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-735169708">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
          <collectionProp name="-630633089">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp reference="../../collectionProp/stringProp[3]"/>
            <stringProp reference="../../collectionProp[2]/stringProp[4]"/>
            <stringProp reference="../../collectionProp/stringProp[5]"/>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">compatibility</stringProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
          <stringProp name="maximumValue">9999999</stringProp>
          <stringProp name="minimumValue">5000000</stringProp>
          <stringProp name="outputFormat">0000000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Policy</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ugsk\shelkovuv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">PasswordForNtlmAuthIsHere</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">webapi userinfo</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sas/connect/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Count" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ContractStatusId&quot;:0,&quot;PolicyNumber&quot;:${Policy},&quot;AdditionalConstructions&quot;:[],&quot;PropertyParts&quot;:[{&quot;PropertyPartTypeId&quot;:2,&quot;Guid&quot;:&quot;4385639c-aab1-4c49-9922-23ce6b4c1918&quot;,&quot;WallMaterialId&quot;:1,&quot;OtherWallMaterial&quot;:null,&quot;InteriorCategoryId&quot;:1,&quot;StructuralElementId&quot;:0,&quot;StructuralElementSquare&quot;:60,&quot;StructuralElementCost&quot;:0,&quot;StructuralElementCalculatedAmount&quot;:0,&quot;StructuralElementDeclaredAmount&quot;:900000,&quot;InteriorSquareEnabled&quot;:false,&quot;InteriorId&quot;:0,&quot;InteriorSquare&quot;:50.82,&quot;InteriorCost&quot;:0,&quot;InteriorCalculatedAmount&quot;:0,&quot;InteriorDeclaredAmount&quot;:300000}],&quot;MovableProperties&quot;:[],&quot;EngineeringEquipments&quot;:[],&quot;MovablePropertyDeterioration&quot;:false,&quot;EngineeringEquipmentDeterioration&quot;:false,&quot;PropertyConstructionYear&quot;:&quot;2010&quot;,&quot;SigningDate&quot;:&quot;2018-05-08T00:00:00&quot;,&quot;ContractFrom&quot;:&quot;2018-05-09T00:00:00&quot;,&quot;InsuredPersonBirthday&quot;:&quot;1983-01-18T00:00:00&quot;,&quot;InspectionInspectionDate&quot;:&quot;2018-05-08T00:00:00&quot;,&quot;UnderwriterCoefficient&quot;:1,&quot;ConstructionTypeId&quot;:2,&quot;IsMultipleSelect&quot;:true,&quot;PropertyExteriorMaterialId&quot;:1,&quot;PropertyExteriorMaterialIsOther&quot;:false,&quot;PropertyFoundationMaterialId&quot;:3,&quot;PropertyFoundationMaterialIsOther&quot;:false,&quot;PropertyRoofMaterialId&quot;:1,&quot;PropertyRoofMaterialIsOther&quot;:false,&quot;PropertyWallMaterialId&quot;:1,&quot;PropertyWallMaterialIsOther&quot;:false,&quot;PropertyPartTypeId&quot;:1,&quot;WallMaterialId&quot;:1,&quot;WallMaterialIsOther&quot;:false,&quot;EngineeringEquipmentAgeRestrictionMaxValue&quot;:16,&quot;InsuranceTermAssuranceHomeId&quot;:12,&quot;InsuranceTermAssuranceHomeValue&quot;:12,&quot;LapsedPaymentId&quot;:1,&quot;FranchiseTypeId&quot;:1,&quot;BonusMalusAssuranceHomeId&quot;:6,&quot;AssumedRisksOnTheContract&quot;:[{&quot;Id&quot;:8,&quot;Name&quot;:&quot;Пакет рисков №1&quot;,&quot;Description&quot;:&quot;Пожар, Удар молнии, Взрыв&quot;},{&quot;Id&quot;:9,&quot;Name&quot;:&quot;Пакет рисков №2&quot;,&quot;Description&quot;:&quot;Стихийные бедствия&quot;},{&quot;Id&quot;:10,&quot;Name&quot;:&quot;Пакет рисков №3&quot;,&quot;Description&quot;:&quot;Авария водопроводных, отопительных, канализационных и противопожарных систем, Проникновение воды и/или других жидкостей&quot;},{&quot;Id&quot;:11,&quot;Name&quot;:&quot;Пакет рисков №4&quot;,&quot;Description&quot;:&quot;Противоправные действия третьих лиц, Кража со взломом, Грабеж, Разбой&quot;},{&quot;Id&quot;:12,&quot;Name&quot;:&quot;Пакет рисков №5&quot;,&quot;Description&quot;:&quot;Падение летательных аппаратов, их обломков, частей или груза, Наезд механических транспортных средств, не принадлежащих Страхователю&quot;}],&quot;MinValue&quot;:0.1,&quot;MaxValue&quot;:15,&quot;PropertyIsFinished&quot;:true,&quot;InteriorCategoryId&quot;:1,&quot;NeedToInsureInterior&quot;:true,&quot;ResidenceTypeId&quot;:1,&quot;PolicyPrefix&quot;:&quot;37/18&quot;,&quot;PolicySerialId&quot;:33,&quot;PropertyAddressUserDefinedAddress&quot;:&quot;Ханты-Мансийский Автономный округ - Югра, г. Ханты-Мансийск, ул. Березовская, 13&quot;,&quot;PropertyAddressFiasId&quot;:&quot;8a2f56a1-693a-4576-8bed-4d4b1214bfc3&quot;,&quot;InsuredContractorTypeId&quot;:1,&quot;InsuredPersonDocTypeId&quot;:12,&quot;FactPayments&quot;:[{&quot;Guid&quot;:&quot;224d33ec-8b16-40ce-8306-666aeac81a82&quot;,&quot;Number&quot;:${Policy},&quot;PaymentKindId&quot;:1,&quot;Serial&quot;:&quot;005&quot;,&quot;PaymentKindUniqueData&quot;:null}],&quot;MainConstructionSublimits&quot;:[{&quot;SublimitOfConstructionPartId&quot;:1,&quot;Value&quot;:15},{&quot;SublimitOfConstructionPartId&quot;:2,&quot;Value&quot;:29},{&quot;SublimitOfConstructionPartId&quot;:3,&quot;Value&quot;:17},{&quot;SublimitOfConstructionPartId&quot;:4,&quot;Value&quot;:12},{&quot;SublimitOfConstructionPartId&quot;:5,&quot;Value&quot;:14},{&quot;SublimitOfConstructionPartId&quot;:6,&quot;Value&quot;:13}],&quot;AdditionalConstructionSublimits&quot;:[{&quot;SublimitOfConstructionPartId&quot;:7,&quot;Value&quot;:11},{&quot;SublimitOfConstructionPartId&quot;:8,&quot;Value&quot;:26},{&quot;SublimitOfConstructionPartId&quot;:9,&quot;Value&quot;:13},{&quot;SublimitOfConstructionPartId&quot;:10,&quot;Value&quot;:8},{&quot;SublimitOfConstructionPartId&quot;:11,&quot;Value&quot;:11},{&quot;SublimitOfConstructionPartId&quot;:12,&quot;Value&quot;:9},{&quot;SublimitOfConstructionPartId&quot;:13,&quot;Value&quot;:18},{&quot;SublimitOfConstructionPartId&quot;:14,&quot;Value&quot;:4}],&quot;ContractTo&quot;:&quot;2019-05-08T00:00:00&quot;,&quot;CSIAPreviousContractId&quot;:null,&quot;PreviousContractId&quot;:null,&quot;PreviousContractNumber&quot;:null,&quot;PreviousPolicySerial&quot;:null,&quot;PropertyInteriorRepairYear&quot;:&quot;2010&quot;,&quot;InsuranceCompanyOfAnotherPolicyId&quot;:null,&quot;PolicyNumberOfAnotherCompany&quot;:null,&quot;PropertyOtherFoundationMaterial&quot;:null,&quot;PropertyOtherWallMaterial&quot;:null,&quot;PropertyOtherExteriorMaterial&quot;:null,&quot;PropertyOtherRoofMaterial&quot;:null,&quot;PropertyAddressKladrId&quot;:&quot;860000010000002&quot;,&quot;NeedToInsureStructuralElement&quot;:true,&quot;InsuredPersonDocSerial&quot;:&quot;5004&quot;,&quot;InsuredPersonDocNumber&quot;:&quot;333555&quot;,&quot;InsuredPersonLastName&quot;:&quot;Иванов&quot;,&quot;InsuredPersonFirstName&quot;:&quot;Иван&quot;,&quot;InsuredPersonMiddleName&quot;:&quot;Иванович&quot;,&quot;InsuredPhones&quot;:[{&quot;Number&quot;:&quot;+7 (913) 913-13-13&quot;,&quot;Status&quot;:0}],&quot;InspectionInspector&quot;:&quot;Петров Петр Петрович&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">//api/AssuranceHome</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">c_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.content.Id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">c_id_not_found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Sell" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/api/AssuranceHomeContracts(${c_id})/K3.Sign</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(TST,1,150,0.9)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">7</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="TST" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="140503903">
              <stringProp name="49">1</stringProp>
              <stringProp name="53">5</stringProp>
              <stringProp name="1722">60</stringProp>
            </collectionProp>
            <collectionProp name="1951299276">
              <stringProp name="53">5</stringProp>
              <stringProp name="53">5</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="141367873">
              <stringProp name="53">5</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1722">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">compatibility</stringProp>
        </CookieManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Policy" enabled="true">
          <stringProp name="maximumValue">9999999</stringProp>
          <stringProp name="minimumValue">5000000</stringProp>
          <stringProp name="outputFormat">0000000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Policy</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Hologram" enabled="true">
          <stringProp name="maximumValue">9999999999</stringProp>
          <stringProp name="minimumValue">0000000000</stringProp>
          <stringProp name="outputFormat">0000000000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Hologram</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ugsk\shelkovuv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">PasswordForNtlmAuthIsHere</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">webapi</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sas/connect/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Count" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;ContractStatusId&quot;:0,&quot;PolicyNumber&quot;:${Policy},&quot;AdditionalConstructions&quot;:[],&quot;PropertyParts&quot;:[{&quot;PropertyPartTypeId&quot;:2,&quot;Guid&quot;:&quot;43f0a333-72b9-4dfd-9f80-e7c507afa32b&quot;,&quot;WallMaterialId&quot;:1,&quot;OtherWallMaterial&quot;:null,&quot;InteriorCategoryId&quot;:1,&quot;StructuralElementId&quot;:0,&quot;StructuralElementSquare&quot;:50,&quot;StructuralElementCost&quot;:0,&quot;StructuralElementCalculatedAmount&quot;:0,&quot;StructuralElementDeclaredAmount&quot;:800000,&quot;InteriorSquareEnabled&quot;:false,&quot;InteriorId&quot;:0,&quot;InteriorSquare&quot;:42.35,&quot;InteriorCost&quot;:0,&quot;InteriorCalculatedAmount&quot;:0,&quot;InteriorDeclaredAmount&quot;:40000,&quot;NeedToInsureInterior&quot;:true,&quot;PropertyIsFinished&quot;:true,&quot;NeedToInsureStructuralElement&quot;:true,&quot;MinValue&quot;:12000,&quot;MaxValue&quot;:36000,&quot;NeedToInsureInteriorOfPropertyPart&quot;:true,&quot;WallMaterialIsOther&quot;:false},{&quot;PropertyPartTypeId&quot;:3,&quot;Guid&quot;:&quot;472b42ad-ae98-4f24-8160-6a2b2e890e5e&quot;,&quot;WallMaterialId&quot;:1,&quot;OtherWallMaterial&quot;:null,&quot;InteriorCategoryId&quot;:1,&quot;StructuralElementId&quot;:0,&quot;StructuralElementSquare&quot;:50,&quot;StructuralElementCost&quot;:0,&quot;StructuralElementCalculatedAmount&quot;:0,&quot;StructuralElementDeclaredAmount&quot;:800000,&quot;InteriorSquareEnabled&quot;:false,&quot;InteriorId&quot;:0,&quot;InteriorSquare&quot;:42.35,&quot;InteriorCost&quot;:0,&quot;InteriorCalculatedAmount&quot;:0,&quot;InteriorDeclaredAmount&quot;:40000,&quot;NeedToInsureInterior&quot;:true,&quot;PropertyIsFinished&quot;:true,&quot;NeedToInsureStructuralElement&quot;:true,&quot;MinValue&quot;:12000,&quot;MaxValue&quot;:36000,&quot;NeedToInsureInteriorOfPropertyPart&quot;:true,&quot;WallMaterialIsOther&quot;:false}],&quot;MovableProperties&quot;:[],&quot;EngineeringEquipments&quot;:[],&quot;MovablePropertyDeterioration&quot;:false,&quot;EngineeringEquipmentDeterioration&quot;:false,&quot;PropertyConstructionYear&quot;:&quot;2010&quot;,&quot;SigningDate&quot;:&quot;2018-10-25T00:00:00&quot;,&quot;ContractFrom&quot;:&quot;2018-10-26T00:00:00&quot;,&quot;InsuredPersonBirthday&quot;:&quot;1983-01-18T00:00:00&quot;,&quot;InspectionInspectionDate&quot;:&quot;2018-10-25T00:00:00&quot;,&quot;UnderwriterCoefficient&quot;:1,&quot;ConstructionTypeId&quot;:2,&quot;PropertyExteriorMaterialId&quot;:1,&quot;PropertyExteriorMaterialIsOther&quot;:false,&quot;PropertyFoundationMaterialId&quot;:1,&quot;PropertyFoundationMaterialIsOther&quot;:false,&quot;PropertyRoofMaterialId&quot;:1,&quot;PropertyRoofMaterialIsOther&quot;:false,&quot;PropertyWallMaterialId&quot;:1,&quot;PropertyWallMaterialIsOther&quot;:false,&quot;PropertyPartTypeId&quot;:1,&quot;EngineeringEquipmentAgeRestrictionMaxValue&quot;:16,&quot;InsuranceTermAssuranceHomeId&quot;:12,&quot;InsuranceTermAssuranceHomeValue&quot;:12,&quot;LapsedPaymentId&quot;:1,&quot;FranchiseTypeId&quot;:1,&quot;BonusMalusAssuranceHomeId&quot;:6,&quot;AssumedRisksOnTheContract&quot;:[{&quot;Id&quot;:8,&quot;Name&quot;:&quot;Пакет рисков №1&quot;,&quot;Description&quot;:&quot;Пожар, Удар молнии, Взрыв&quot;},{&quot;Id&quot;:9,&quot;Name&quot;:&quot;Пакет рисков №2&quot;,&quot;Description&quot;:&quot;Стихийные бедствия&quot;},{&quot;Id&quot;:10,&quot;Name&quot;:&quot;Пакет рисков №3&quot;,&quot;Description&quot;:&quot;Авария водопроводных, отопительных, канализационных и противопожарных систем, Проникновение воды и/или других жидкостей&quot;},{&quot;Id&quot;:11,&quot;Name&quot;:&quot;Пакет рисков №4&quot;,&quot;Description&quot;:&quot;Противоправные действия третьих лиц, Кража со взломом, Грабеж, Разбой&quot;},{&quot;Id&quot;:12,&quot;Name&quot;:&quot;Пакет рисков №5&quot;,&quot;Description&quot;:&quot;Падение летательных аппаратов, их обломков, частей или груза, Наезд механических транспортных средств, не принадлежащих Страхователю&quot;}],&quot;MinValue&quot;:0.1,&quot;MaxValue&quot;:15,&quot;PropertyIsFinished&quot;:true,&quot;NeedToInsureInterior&quot;:true,&quot;ResidenceTypeId&quot;:1,&quot;PolicyPrefix&quot;:&quot;37/18&quot;,&quot;PolicySerialId&quot;:33,&quot;PropertyAddressUserDefinedAddress&quot;:&quot;Ханты-Мансийский Автономный округ - Югра, г. Ханты-Мансийск, ул. Прохладная, 13&quot;,&quot;PropertyAddressFiasId&quot;:&quot;54cdae7a-0ce2-4578-a571-64fd90f6708f&quot;,&quot;InsuredContractorTypeId&quot;:1,&quot;InsuredPersonDocTypeId&quot;:12,&quot;FactPayments&quot;:[{&quot;Guid&quot;:&quot;4e97becd-1d14-4f6b-86c8-2b9f2fff1909&quot;,&quot;Number&quot;:&quot;8888888&quot;,&quot;DatePay&quot;:null,&quot;PaymentKindId&quot;:1,&quot;PaymentKindUniqueData&quot;:null,&quot;PaymentRegistryId&quot;:null,&quot;Serial&quot;:&quot;005&quot;}],&quot;MainConstructionSublimits&quot;:[{&quot;SublimitOfConstructionPartId&quot;:1,&quot;Value&quot;:15},{&quot;SublimitOfConstructionPartId&quot;:2,&quot;Value&quot;:29},{&quot;SublimitOfConstructionPartId&quot;:3,&quot;Value&quot;:17},{&quot;SublimitOfConstructionPartId&quot;:4,&quot;Value&quot;:12},{&quot;SublimitOfConstructionPartId&quot;:5,&quot;Value&quot;:14},{&quot;SublimitOfConstructionPartId&quot;:6,&quot;Value&quot;:13}],&quot;AdditionalConstructionSublimits&quot;:[{&quot;SublimitOfConstructionPartId&quot;:7,&quot;Value&quot;:11},{&quot;SublimitOfConstructionPartId&quot;:8,&quot;Value&quot;:26},{&quot;SublimitOfConstructionPartId&quot;:9,&quot;Value&quot;:13},{&quot;SublimitOfConstructionPartId&quot;:10,&quot;Value&quot;:8},{&quot;SublimitOfConstructionPartId&quot;:11,&quot;Value&quot;:11},{&quot;SublimitOfConstructionPartId&quot;:12,&quot;Value&quot;:9},{&quot;SublimitOfConstructionPartId&quot;:13,&quot;Value&quot;:18},{&quot;SublimitOfConstructionPartId&quot;:14,&quot;Value&quot;:4}],&quot;ContractTo&quot;:&quot;2019-10-25T00:00:00&quot;,&quot;CSIAPreviousContractId&quot;:null,&quot;PreviousContractId&quot;:null,&quot;PreviousContractNumber&quot;:null,&quot;PreviousPolicySerial&quot;:null,&quot;PropertyInteriorRepairYear&quot;:&quot;2010&quot;,&quot;InsuranceCompanyOfAnotherPolicyId&quot;:null,&quot;PolicyNumberOfAnotherCompany&quot;:null,&quot;PropertyOtherFoundationMaterial&quot;:null,&quot;PropertyOtherWallMaterial&quot;:null,&quot;PropertyOtherExteriorMaterial&quot;:null,&quot;PropertyOtherRoofMaterial&quot;:null,&quot;PropertyAddressKladrId&quot;:&quot;860000010000158&quot;,&quot;NeedToInsureStructuralElement&quot;:true,&quot;InsuredPersonDocSerial&quot;:&quot;5004&quot;,&quot;InsuredPersonDocNumber&quot;:&quot;333555&quot;,&quot;InsuredPersonLastName&quot;:&quot;Иванов&quot;,&quot;InsuredPersonFirstName&quot;:&quot;Иван&quot;,&quot;InsuredPersonMiddleName&quot;:&quot;Иванович&quot;,&quot;InsuredPhones&quot;:[{&quot;Number&quot;:&quot;+7 (919) 137-85-63&quot;,&quot;Status&quot;:0}],&quot;InspectionInspector&quot;:&quot;Петров Петр Петрович&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">//api/AssuranceHome</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">c_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.content.Id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">c_id_not_found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AssuranceHome_Sell" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/api/AssuranceHomeContracts(${c_id})/K3.Sign</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
