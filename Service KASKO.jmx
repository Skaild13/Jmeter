<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="target.environment" elementType="Argument">
            <stringProp name="Argument.name">target.environment</stringProp>
            <stringProp name="Argument.value">${__P(target.environment,testprocloud.ugsk.ru)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="false">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://testprocloud.ugsk.ru/sas/connect/token</stringProp>
            <stringProp name="Authorization.username">ro.client</stringProp>
            <stringProp name="Authorization.password">secret</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
          </elementProp>
        </collectionProp>
      </AuthManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="false">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${target.environment}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <stringProp name="CookieManager.policy">compatibility</stringProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <longProp name="ThreadGroup.start_time">1518150959000</longProp>
        <longProp name="ThreadGroup.end_time">1518150959000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OSAGO_Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ugsk\Andreychikoviv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Wololo!AnyPasswdIsHere</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/eap7/api/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OSAGO_VehicleBrand" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
&quot;InspectionConclusions&quot;:[], &#xd;
&quot;StatusId&quot;:&quot;1&quot;,&#xd;
&quot;AgeExperience&quot;:&quot;до 22 лет включительно со стажем вождения до 3 лет включительно&quot;,&#xd;
&quot;AreViolationsExist&quot;:&quot;Нет&quot;,&#xd;
&quot;ContractFrom&quot;:&quot;2018-11-24T00:00:00&quot;,&#xd;
&quot;ContractStatusName&quot;:&quot;null&quot;,&#xd;
&quot;ContractTo&quot;:&quot;2019-11-23T23:59:59&quot;,&#xd;
&quot;DatePay&quot;:&quot;2017-11-21T08:03:11&quot;,&#xd;
&quot;DriverRestriction&quot;:&quot;Да&quot;,&#xd;
&quot;Drivers&quot;:[&#xd;
        { &#xd;
          &quot;ContractorGender&quot;:&quot;M&quot;,&#xd;
          &quot;ContractorPersonBirthday&quot;:&quot;1962-02-14T00:00:00&quot;,&#xd;
          &quot;ContractorPersonCountry&quot;:&quot;Россия&quot;,&#xd;
          &quot;ContractorPersonFirstName&quot;:&quot;Евгений&quot;,&#xd;
          &quot;ContractorPersonLastName&quot;:&quot;Артемьев&quot;,&#xd;
          &quot;ContractorPersonMiddleName&quot;:&quot;Иванович&quot;,&#xd;
          &quot;KBMClass&quot;:&quot;13&quot;,&#xd;
          &quot;KBMErrors&quot;:[],&#xd;
          &quot;LicenseIssueDate&quot;:&quot;2009-01-14T00:00:00&quot;,&#xd;
          &quot;LicenseNumber&quot;:&quot;110574&quot;,&#xd;
          &quot;LicenseSerial&quot;:&quot;51ОН&quot;,&#xd;
          &quot;PayoutCount&quot;:&quot;0&quot;,&#xd;
          &quot;PersonIsNotResident&quot;:&quot;false&quot;,&#xd;
          &quot;RSAKBMClass&quot;:&quot;null&quot;,&#xd;
          &quot;RSAKBMValue&quot;:&quot;0.5&quot;,&#xd;
          &quot;RSAPayoutCount&quot;:&quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
        &quot;ContractorGender&quot;:&quot;F&quot;,&#xd;
        &quot;ContractorPersonBirthday&quot;:&quot;1964-07-14T00:00:00&quot;,&#xd;
        &quot;ContractorPersonCountry&quot;:&quot;Россия&quot;,&#xd;
        &quot;ContractorPersonFirstName&quot;:&quot;Валентина&quot;,&#xd;
        &quot;ContractorPersonLastName&quot;:&quot;Артемьева&quot;,&#xd;
        &quot;ContractorPersonMiddleName&quot;:&quot;Васильевна&quot;,&#xd;
        &quot;KBMClass&quot;:&quot;11&quot;,&#xd;
        &quot;KBMErrors&quot;:[],&#xd;
        &quot;LicenseIssueDate&quot;:&quot;2010-06-15T00:00:00&quot;,&#xd;
        &quot;LicenseNumber&quot;:&quot;512928&quot;,&#xd;
        &quot;LicenseSerial&quot;:&quot;51УА&quot;,&#xd;
        &quot;PayoutCount&quot;:&quot;0&quot;,&#xd;
        &quot;PersonIsNotResident&quot;:&quot;false&quot;,&#xd;
        &quot;RSAKBMClass&quot;:&quot;null&quot;,&#xd;
        &quot;RSAKBMValue&quot;:&quot;0.6&quot;,&#xd;
        &quot;RSAPayoutCount&quot;:&quot;0&quot;&#xd;
        },&#xd;
        {&#xd;
        &quot;ContractorGender&quot;:&quot;M&quot;,&#xd;
        &quot;ContractorPersonBirthday&quot;:&quot;1987-02-27T00:00:00&quot;,&#xd;
        &quot;ContractorPersonCountry&quot;:&quot;Россия&quot;,&#xd;
        &quot;ContractorPersonFirstName&quot;:&quot;Иван&quot;,&#xd;
        &quot;ContractorPersonLastName&quot;:&quot;Артемьев&quot;,&#xd;
        &quot;ContractorPersonMiddleName&quot;:&quot;Евгеньевич&quot;,&#xd;
        &quot;Guid&quot;:&quot;cf2871ba-3864-4d91-a312-c986fee920a7&quot;,&#xd;
        &quot;KBMClass&quot;:&quot;8&quot;,&#xd;
        &quot;KBMErrors&quot;:[],&#xd;
        &quot;LicenseIssueDate&quot;:&quot;2007-05-10T00:00:00&quot;,&#xd;
        &quot;LicenseNumber&quot;:&quot;010294&quot;,&#xd;
        &quot;LicenseSerial&quot;:&quot;78СЕ&quot;,&#xd;
        &quot;PayoutCount&quot;:&quot;0&quot;,&#xd;
        &quot;PersonIsNotResident&quot;:&quot;false&quot;,&#xd;
        &quot;RSAKBMClass&quot;:&quot;null&quot;,&#xd;
        &quot;RSAKBMValue&quot;:&quot;0.75&quot;,&#xd;
        &quot;RSAPayoutCount&quot;:&quot;0&quot;&#xd;
        }&#xd;
        ],&#xd;
&quot;FilialGuid&quot;:&quot;666D6E7B-F305-11DF-B319-001517DA95CC&quot;,&#xd;
&quot;HasBeenRSACalculated&quot;:&quot;false&quot;,&#xd;
&quot;InspectionConclusions&quot;:[],&#xd;
&quot;InspectionIsNotRequired&quot;:&quot;false&quot;,&#xd;
&quot;InsuranceTerm&quot;:&quot;1 год&quot;,&#xd;
&quot;InsuredCommonPhone&quot;:&quot;+7 (921) 912-36-12#V&quot;,&#xd;
&quot;InsuredCommonRealAddress&quot;:&quot;Ленинградская обл., Гатчинский р-н, д. Нижняя, ул. Орловская, д. 5&quot;,&#xd;
&quot;InsuredCommonRealAddressFiasId&quot;:&quot;27c950ac-0e0a-44dc-914d-fe3ff3d6aade&quot;,&#xd;
&quot;InsuredCommonRealAddressKladrId&quot;:&quot;null&quot;,&#xd;
&quot;InsuredContractorType&quot;:&quot;физическое лицо&quot;,&#xd;
&quot;InsuredCountry&quot;:&quot;Россия&quot;,&#xd;
&quot;InsuredDocumentType&quot;:&quot;Паспорт гражданина РФ&quot;,&#xd;
&quot;InsuredGuid&quot;:&quot;58ea4aa9-2bf5-4149-a930-340dd57da53d&quot;,&#xd;
&quot;InsuredIsNotResident&quot;:&quot;false&quot;,&#xd;
&quot;InsuredOrgINN&quot;:&quot;null&quot;,&#xd;
&quot;InsuredOrgName&quot;:&quot;null&quot;,&#xd;
&quot;InsuredPersonBirthday&quot;:&quot;1962-02-14T00:00:00&quot;,&#xd;
&quot;InsuredPersonDocDateGiven&quot;:&quot;2007-03-07T00:00:00&quot;,&#xd;
&quot;InsuredPersonDocNumber&quot;:&quot;080683&quot;,&#xd;
&quot;InsuredPersonDocSerial&quot;:&quot;4706&quot;,&#xd;
&quot;InsuredPersonDocWhomGiven&quot;:&quot;ОВД Октябрьского округа города Мурманска&quot;,&#xd;
&quot;InsuredPersonFirstName&quot;:&quot;Евгений&quot;,&#xd;
&quot;InsuredPersonLastName&quot;:&quot;Артемьев&quot;,&#xd;
&quot;InsuredPersonMiddleName&quot;:&quot;Иванович&quot;,&#xd;
&quot;InsuredVID&quot;:&quot;70944f5f-7550-4919-bb77-9d31e7bc23b0&quot;,&#xd;
&quot;IsA7Required&quot;:&quot;true&quot;,&#xd;
&quot;IsEOsago&quot;:&quot;false&quot;,&#xd;
&quot;IsNew&quot;:&quot;true&quot;,&#xd;
&quot;IsSeason&quot;:&quot;false&quot;,&#xd;
&quot;IsTowardInspection&quot;:&quot;false&quot;,&#xd;
&quot;KBMClass&quot;:&quot;3&quot;,&#xd;
&quot;KBMErrors&quot;:[],&#xd;
&quot;OsagoInspectionConclusionAbsenceReasonName&quot;:&quot;null&quot;,&#xd;
&quot;OthersInformation&quot;:&quot;null&quot;,&#xd;
&quot;OwnerCommonPhone&quot;:&quot;+7 (921) 912-36-12#V&quot;,&#xd;
&quot;OwnerCommonRealAddress&quot;:&quot;Ленинградская обл., Гатчинский р-н, д. Нижняя, ул. Орловская, д. 5&quot;,&#xd;
&quot;OwnerCommonRealAddressFiasId&quot;:&quot;27c950ac-0e0a-44dc-914d-fe3ff3d6aade&quot;,&#xd;
&quot;OwnerCommonRealAddressKladrId&quot;:&quot;null&quot;,&#xd;
&quot;OwnerContractorType&quot;:&quot;физическое лицо&quot;,&#xd;
&quot;OwnerCountry&quot;:&quot;Россия&quot;,&#xd;
&quot;OwnerDocumentType&quot;:&quot;Паспорт гражданина РФ&quot;,&#xd;
&quot;OwnerIsNotResident&quot;:&quot;false&quot;,&#xd;
&quot;OwnerOrgINN&quot;:&quot;null&quot;,&#xd;
&quot;OwnerOrgName&quot;:&quot;null&quot;,&#xd;
&quot;OwnerPersonBirthday&quot;:&quot;1962-02-14T00:00:00&quot;,&#xd;
&quot;OwnerPersonDocDateGiven&quot;:&quot;2007-03-07T00:00:00&quot;,&#xd;
&quot;OwnerPersonDocNumber&quot;:&quot;080683&quot;,&#xd;
&quot;OwnerPersonDocSerial&quot;:&quot;4706&quot;,&#xd;
&quot;OwnerPersonDocWhomGiven&quot;:&quot;ОВД Октябрьского округа города Мурманска&quot;,&#xd;
&quot;OwnerPersonFirstName&quot;:&quot;Евгений&quot;,&#xd;
&quot;OwnerPersonLastName&quot;:&quot;Артемьев&quot;,&#xd;
&quot;OwnerPersonMiddleName&quot;:&quot;Иванович&quot;,&#xd;
&quot;PaymentDocument&quot;:&quot;null&quot;,&#xd;
&quot;PaymentDocumentNumber&quot;:&quot;null&quot;,&#xd;
&quot;PaymentDocumentSerial&quot;:&quot;null&quot;,&#xd;
&quot;PaymentKind&quot;:&quot;Наличные по квитанции А7&quot;,&#xd;
&quot;PolicyPrefix&quot;:&quot;37/17&quot;,&#xd;
&quot;PolicySerial&quot;:&quot;ЕЕЕ&quot;,&#xd;
&quot;RSAID&quot;:&quot;null&quot;,&#xd;
&quot;RSAKBMClass&quot;:&quot;null&quot;,&#xd;
&quot;RSAKBMValue&quot;:&quot;0&quot;,&#xd;
&quot;RSAPayoutCount&quot;:&quot;0&quot;,&#xd;
&quot;SellerComment&quot;:&quot;null&quot;,&#xd;
&quot;SigningDate&quot;:&quot;2017-11-21T00:00:00&quot;,&#xd;
&quot;SpecialNote&quot;:&quot;null&quot;,&#xd;
&quot;UsagePeriod&quot;:&quot;10 месяцев и более&quot;,&#xd;
&quot;UsagePeriods&quot;:[],&#xd;
&quot;UsagePurpose&quot;:&quot;Личная&quot;,&#xd;
&quot;UserDefinedMarkModel&quot;:&quot;Toyota Camry&quot;,&#xd;
&quot;VehicleCheckupDate&quot;:&quot;2018-11-15T00:00:00&quot;,&#xd;
&quot;VehicleCheckupDocumentNumber&quot;:&quot;052020011701118&quot;,&#xd;
&quot;VehicleCheckupDocumentSerial&quot;:&quot;null&quot;,&#xd;
&quot;VehicleCheckupDocumentType&quot;:&quot;Диагностическая карта&quot;,&#xd;
&quot;VehicleCheckupIsNotRequired&quot;:&quot;false&quot;,&#xd;
&quot;VehicleDocBodyNumber&quot;:&quot;XW7BE40K30S000350&quot;,&#xd;
&quot;VehicleDocChassisNumber&quot;:&quot;null&quot;,&#xd;
&quot;VehicleDocCountPassengerSeat&quot;:&quot;5&quot;,&#xd;
&quot;VehicleDocEnginePowerHP&quot;:&quot;167&quot;,&#xd;
&quot;VehicleDocEnginePowerKW&quot;:&quot;123&quot;,&#xd;
&quot;VehicleDocGrossVehicleWeight&quot;:&quot;null&quot;,&#xd;
&quot;VehicleDocIssuredDate&quot;:&quot;2017-05-16T00:00:00&quot;,&#xd;
&quot;VehicleDocNumber&quot;:&quot;352601&quot;,&#xd;
&quot;VehicleDocSerial&quot;:&quot;4742&quot;,&#xd;
&quot;VehicleDocumentType&quot;:&quot;Свидетельство о регистрации ТС&quot;,&#xd;
&quot;VehicleDocuments&quot;:[&#xd;
                {&#xd;
                  &quot;VehicleDocIssuredDate&quot;:&quot;2017-05-16T00:00:00&quot;,&#xd;
                  &quot;VehicleDocNumber&quot;:&quot;352601&quot;,&#xd;
                  &quot;VehicleDocSerial&quot;:&quot;4742&quot;,&#xd;
                  &quot;VehicleDocumentType&quot;:&quot;Свидетельство о регистрации ТС&quot;&#xd;
                }&#xd;
                ],&#xd;
&quot;VehicleLicensePlate&quot;:&quot;О992РВ47&quot;,&#xd;
&quot;VehicleModel&quot;:&quot;924&quot;,&#xd;
&quot;VehicleModelSpelt&quot;:&quot;Toyota Camry&quot;,&#xd;
&quot;VehicleRegistration&quot;:&quot;зарегистрированные в РФ&quot;,&#xd;
&quot;VehicleType&quot;:&quot;Легковые автомобили&quot;,&#xd;
&quot;VehicleVIN&quot;:&quot;XW7BE40K30S000350&quot;,&#xd;
&quot;VehicleYearMade&quot;:&quot;2008&quot;,&#xd;
&quot;WithTrailer&quot;:&quot;false&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/eap7/api/Field/Osago/Nested/Vehicle/VehicleBrand</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="1159483372">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1264019991">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="1368556610">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-2104298250">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1766355382">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1661818763">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48656">110</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-1557282144">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48687">120</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-735169708">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48718">130</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
          <collectionProp name="-630633089">
            <stringProp name="1567">10</stringProp>
            <stringProp name="48749">140</stringProp>
            <stringProp name="30">30</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="10">10</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OSAGO_Token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ugsk\Andreychikoviv</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Wololo!AnyPasswdIsHere</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OSAGO_Sell" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;InspectionConclusions&quot;:[],&quot;Id&quot;:null,&quot;Calculation&quot;:null,&quot;InsurancePremium&quot;:0,&quot;ContractStatusId&quot;:1,&quot;ContractStatusName&quot;:null,&quot;UsagePurpose&quot;:&quot;Личная&quot;,&quot;VehicleModelSpelt&quot;:&quot;Ford FOCUS&quot;,&quot;VehicleBrandId&quot;:0,&quot;VehicleModel&quot;:1217,&quot;VehicleType&quot;:&quot;Легковые автомобили&quot;,&quot;WithTrailer&quot;:false,&quot;IsSeason&quot;:false,&quot;UserDefinedMarkModel&quot;:&quot;Ford FOCUS &quot;,&quot;VehicleLicensePlate&quot;:&quot;a111aa54&quot;,&quot;VehicleVIN&quot;:&quot;11111111111111111&quot;,&quot;VehicleDocuments&quot;:[{&quot;VehicleDocumentType&quot;:&quot;Паспорт ТС&quot;,&quot;VehicleDocSerial&quot;:&quot;456&quot;,&quot;VehicleDocNumber&quot;:&quot;456&quot;,&quot;VehicleDocIssuredDate&quot;:&quot;2018-07-04T00:00:00&quot;},{&quot;VehicleDocumentType&quot;:&quot;Свидетельство о регистрации ТС&quot;,&quot;VehicleDocSerial&quot;:&quot;456&quot;,&quot;VehicleDocNumber&quot;:&quot;456&quot;,&quot;VehicleDocIssuredDate&quot;:&quot;2018-07-04T00:00:00&quot;}],&quot;VehicleDocChassisNumber&quot;:null,&quot;VehicleDocBodyNumber&quot;:null,&quot;VehicleDocEnginePowerHP&quot;:200,&quot;VehicleDocEnginePowerKW&quot;:&quot;147&quot;,&quot;VehicleYearMade&quot;:2018,&quot;IsNew&quot;:true,&quot;VehicleDocGrossVehicleWeight&quot;:null,&quot;VehicleDocCountPassengerSeat&quot;:null,&quot;VehicleCheckupDate&quot;:null,&quot;VehicleCheckupDocumentType&quot;:&quot;ГТО (талон государственного технического осмотра)&quot;,&quot;VehicleCheckupIsNotRequired&quot;:false,&quot;VehicleCheckupDocumentSerial&quot;:null,&quot;VehicleCheckupDocumentNumber&quot;:null,&quot;UsagePeriods&quot;:null,&quot;FilialGuid&quot;:null,&quot;PolicyPrefix&quot;:&quot;37/18&quot;,&quot;PolicySerial&quot;:&quot;ЕЕЕ&quot;,&quot;PolicyNumber&quot;:null,&quot;ContractFrom&quot;:&quot;2018-07-04T15:45:00&quot;,&quot;ContractTo&quot;:&quot;2019-07-03T23:59:59&quot;,&quot;VehicleRegistration&quot;:&quot;зарегистрированные в РФ&quot;,&quot;InsuranceTerm&quot;:&quot;1 год&quot;,&quot;UsagePeriod&quot;:&quot;10 месяцев и более&quot;,&quot;PreviousInsurerName&quot;:null,&quot;PreviousPolicySerial&quot;:null,&quot;PreviousPolicyNumber&quot;:null,&quot;PreviousContractId&quot;:null,&quot;OthersInformation&quot;:null,&quot;SpecialNote&quot;:null,&quot;PaymentDocument&quot;:null,&quot;PaymentDocumentSerial&quot;:null,&quot;PaymentDocumentNumber&quot;:null,&quot;PaymentKindId&quot;:0,&quot;PaymentKind&quot;:&quot;Наличные по квитанции А7&quot;,&quot;Payments&quot;:[],&quot;PaymentKindUniqueData&quot;:null,&quot;IsA7Required&quot;:true,&quot;DatePay&quot;:&quot;2018-07-04T00:00:00&quot;,&quot;AreViolationsExist&quot;:&quot;Нет&quot;,&quot;SigningDate&quot;:null,&quot;SellerComment&quot;:null,&quot;InsuredContractorType&quot;:&quot;физическое лицо&quot;,&quot;InsuredDocumentType&quot;:&quot;Паспорт гражданина РФ&quot;,&quot;InsuredPersonDocSerial&quot;:&quot;5004&quot;,&quot;InsuredPersonDocNumber&quot;:&quot;333555&quot;,&quot;InsuredPersonDocDateGiven&quot;:&quot;2004-04-20T00:00:00&quot;,&quot;InsuredPersonDocWhomGiven&quot;:&quot;уфмс&quot;,&quot;InsuredPersonLastName&quot;:&quot;Иванов&quot;,&quot;InsuredPersonFirstName&quot;:&quot;Иван&quot;,&quot;InsuredPersonMiddleName&quot;:&quot;Иванович&quot;,&quot;InsuredOrgName&quot;:null,&quot;InsuredPersonBirthday&quot;:&quot;1984-01-18T00:00:00&quot;,&quot;InsuredPhones&quot;:[],&quot;InsuredPhoneVerificationId&quot;:null,&quot;InsuredCommonPhone&quot;:&quot;+7 (913) 945-13-13#V&quot;,&quot;InsuredOrgINN&quot;:null,&quot;InsuredIsNotResident&quot;:false,&quot;InsuredCommonRealAddress&quot;:&quot;Ханты-Мансийский Автономный округ - Югра, г. Ханты-Мансийск, ул. Башмаковых, 13, 1&quot;,&quot;InsuredCountry&quot;:&quot;Россия&quot;,&quot;InsuredCommonRealAddressFiasId&quot;:&quot;9ca0b2c4-2391-43c2-9cbc-f8add460e62f&quot;,&quot;InsuredCommonRealAddressKladrId&quot;:null,&quot;InsuredGuid&quot;:&quot;0f2022b3-cbe1-4599-a35a-a8b6ceb1f5ec&quot;,&quot;OwnerContractorType&quot;:&quot;физическое лицо&quot;,&quot;OwnerDocumentType&quot;:&quot;Паспорт гражданина РФ&quot;,&quot;OwnerPersonDocSerial&quot;:&quot;5004&quot;,&quot;OwnerPersonDocNumber&quot;:&quot;333555&quot;,&quot;OwnerPersonDocDateGiven&quot;:&quot;2004-04-20T00:00:00&quot;,&quot;OwnerPersonDocWhomGiven&quot;:&quot;уфмс&quot;,&quot;OwnerPersonLastName&quot;:&quot;Иванов&quot;,&quot;OwnerPersonFirstName&quot;:&quot;Иван&quot;,&quot;OwnerPersonMiddleName&quot;:&quot;Иванович&quot;,&quot;OwnerOrgName&quot;:null,&quot;OwnerPersonBirthday&quot;:&quot;1984-01-18T00:00:00&quot;,&quot;OwnerPhones&quot;:[],&quot;OwnerPhoneVerificationId&quot;:null,&quot;OwnerCommonPhone&quot;:&quot;+7 (913) 945-13-13#V&quot;,&quot;OwnerOrgINN&quot;:null,&quot;OwnerIsNotResident&quot;:false,&quot;OwnerCommonRealAddress&quot;:&quot;Ханты-Мансийский Автономный округ - Югра, г. Ханты-Мансийск, ул. Башмаковых, 13, 1&quot;,&quot;OwnerCountry&quot;:&quot;Россия&quot;,&quot;OwnerCommonRealAddressFiasId&quot;:&quot;9ca0b2c4-2391-43c2-9cbc-f8add460e62f&quot;,&quot;OwnerCommonRealAddressKladrId&quot;:null,&quot;OwnerGuid&quot;:&quot;0f2022b3-cbe1-4599-a35a-a8b6ceb1f5ec&quot;,&quot;DriverRestriction&quot;:&quot;Да&quot;,&quot;AgeExperience&quot;:&quot;до 22 лет включительно со стажем вождения до 3 лет включительно&quot;,&quot;KBMClass&quot;:&quot;3&quot;,&quot;RSAKBMClass&quot;:null,&quot;InspectionIsNotRequired&quot;:true,&quot;OsagoInspectionConclusionAbsenceReasonName&quot;:&quot;ТС новое из салона&quot;,&quot;IsTowardInspection&quot;:null,&quot;RSAKBMValue&quot;:0,&quot;RSAPayoutCount&quot;:0,&quot;PayoutCount&quot;:0,&quot;Drivers&quot;:[{&quot;Id&quot;:0,&quot;ContractorPersonFirstName&quot;:&quot;Иван&quot;,&quot;ContractorPersonMiddleName&quot;:&quot;Иванович&quot;,&quot;ContractorPersonLastName&quot;:&quot;Иванов&quot;,&quot;ContractorPersonBirthday&quot;:&quot;1984-01-18T00:00:00&quot;,&quot;ContractorGender&quot;:&quot;M&quot;,&quot;LicenseNumber&quot;:&quot;456&quot;,&quot;LicenseSerial&quot;:&quot;456&quot;,&quot;LicenseIssueDate&quot;:&quot;2005-07-04T00:00:00&quot;,&quot;PersonIsNotResident&quot;:false,&quot;ContractorPersonCountry&quot;:&quot;Россия&quot;,&quot;RSAPayoutCount&quot;:0,&quot;PayoutCount&quot;:0,&quot;RSAKBMClass&quot;:null,&quot;KBMClass&quot;:&quot;3&quot;,&quot;RSAKBMValue&quot;:0,&quot;Guid&quot;:&quot;0f2022b3-cbe1-4599-a35a-a8b6ceb1f5ec&quot;,&quot;KBMErrors&quot;:[]}],&quot;HasBeenRSACalculated&quot;:false,&quot;RSAID&quot;:null,&quot;InsuredId&quot;:0,&quot;OwnerId&quot;:0,&quot;VehicleId&quot;:0,&quot;KBMErrors&quot;:[],&quot;Guid&quot;:&quot;00000000-0000-0000-0000-000000000000&quot;,&quot;InsuredVID&quot;:&quot;d598dfca-f676-4172-9a32-d7299abce5bb&quot;,&quot;IsEOsago&quot;:false,&quot;FactPayments&quot;:[],&quot;CalculatedPremium&quot;:null,&quot;State&quot;:0,&quot;VehicleDocumentType&quot;:&quot;Свидетельство о регистрации ТС&quot;,&quot;VehicleDocSerial&quot;:&quot;456&quot;,&quot;VehicleDocNumber&quot;:&quot;456&quot;,&quot;VehicleDocIssuredDate&quot;:&quot;2018-07-04T00:00:00&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/OSAGO/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">bearer ${access_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">http://testpro.ugsk.ru/front/OSAGO</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
      </hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(TST,1,100,0.9)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">7</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="TST" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="137886356">
              <stringProp name="49">1</stringProp>
              <stringProp name="1567">10</stringProp>
              <stringProp name="1722">60</stringProp>
            </collectionProp>
            <collectionProp name="1867537772">
              <stringProp name="1567">10</stringProp>
              <stringProp name="1567">10</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="60223916">
              <stringProp name="1567">10</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1722">60</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="false">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">compatibility</stringProp>
        </CookieManager>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Policy" enabled="false">
          <stringProp name="maximumValue">9999999</stringProp>
          <stringProp name="minimumValue">5000000</stringProp>
          <stringProp name="outputFormat">0000000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Policy</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Hologram" enabled="false">
          <stringProp name="maximumValue">9999999999</stringProp>
          <stringProp name="minimumValue">0000000000</stringProp>
          <stringProp name="outputFormat">0000000000</stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">Hologram</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OSAGO_Token" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
              </elementProp>
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ugsk\rozhkovap</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">ro.client</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">secret</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">webapi</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">PasswordForNtlmAuthIsHere</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sas/connect/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Calcservice" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;InsuranceTerm&quot; : &#xd;
	{&#xd;
		&quot;Name&quot; : &quot;1 год&quot;&#xd;
	},&#xd;
	&quot;Filial&quot; : &#xd;
	{&#xd;
		&quot;Id&quot; : &quot;59&quot;&#xd;
	},&#xd;
	&quot;VehicleModel&quot; : &#xd;
	{&#xd;
		&quot;VehicleTypeId&quot; : 1,&#xd;
		&quot;VehicleBrandId&quot; : 9,&#xd;
		&quot;Id&quot; : 2874&#xd;
	},&#xd;
	&quot;VehicleYearMade&quot; : 2018,&#xd;
	&quot;InsuranceProgram&quot; : &quot;«Классик»&quot;,&#xd;
	&quot;DriversRestrictionApproachName&quot; : &#xd;
	{&#xd;
		&quot;Name&quot; : &quot;Список водителей&quot;,&#xd;
		&quot;ContractorType&quot; : &#xd;
		{&#xd;
			&quot;Name&quot; : &quot;физическое лицо&quot;&#xd;
		}&#xd;
	},&#xd;
	&quot;BonusMalus&quot; : &quot;Новый полис&quot;,&#xd;
	&quot;FranchiseType&quot; : &quot;Без франшизы&quot;,&#xd;
	&quot;FranchiseAmount&quot; : &quot;Без франшизы&quot;,&#xd;
	&quot;KeyExist&quot; : &quot;Хищение без утраты ключей и документов&quot;,&#xd;
	&quot;ATSRequirement&quot; : &quot;ДА&quot;,&#xd;
	&quot;InsuranceAmountType&quot; : &quot;Неагрегатная&quot;,&#xd;
	&quot;PaymentForm&quot; : &quot;Ремонт на СТОА дилера по направлению Страховщика, за исключением случаев тотального повреждения ТС.  Без учета износа.&quot;,&#xd;
	&quot;IntermediateSeller&quot; : &#xd;
	{&#xd;
		&#xd;
	},&#xd;
	&quot;Gap&quot; : &quot;изменяющаяся&quot;,&#xd;
	&quot;SaleChannel&quot; : &quot;Агентский&quot;,&#xd;
	&quot;Lapsedpayment&quot; : &quot;Единовременно&quot;,&#xd;
	&quot;InsuranceCoverage&quot; : &quot;Российская Федерация&quot;,&#xd;
	&quot;PointOfSale&quot; : &#xd;
	{&#xd;
		&#xd;
	},&#xd;
	&quot;SigningDate&quot; : &quot;2018-07-07T14:51:54&quot;,&#xd;
	&quot;ContractFrom&quot; : &quot;2018-07-08T14:51:54&quot;,&#xd;
	&quot;GenderAgeExperiences&quot; :&#xd;
	[&#xd;
		{&#xd;
			&quot;BirthDate&quot; : &quot;1990-07-21T14:51:54&quot;,&#xd;
			&quot;LicenseIssueDate&quot; : &quot;2015-07-07T14:51:54&quot;&#xd;
		}&#xd;
	],&#xd;
	&quot;Risk&quot; :&#xd;
	{&#xd;
		&quot;Name&quot; : &quot;Частичное КАСКО&quot;&#xd;
	},&#xd;
	&quot;InsuranceAmount&quot; : 500000&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">devpro.ugsk.ru</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">calcservice/Calculation</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Duration Assertion" enabled="true">
            <stringProp name="DurationAssertion.duration">30000</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
        <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>2</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <stringProp name="start_offset"></stringProp>
          <stringProp name="end_offset"></stringProp>
          <boolProp name="include_checkbox_state">false</boolProp>
          <boolProp name="exclude_checkbox_state">false</boolProp>
        </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
